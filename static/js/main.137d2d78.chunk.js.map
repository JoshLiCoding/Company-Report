{"version":3,"sources":["logo.svg","Home/Home.js","Google/Google.js","404/404.js","App.js","reportWebVitals.js","index.js"],"names":["Home","useState","hide","setHide","input","setInput","sector","setSector","name","setName","country","setCountry","exchange","setExchange","price","setPrice","five","setFive","fifty","setFifty","twohundred","setTwoHundred","fiveGR","setFiveGR","thirtyGR","setThirtyGR","graph","setGraph","news","setNews","peers","setPeers","runFunc","stock","finnhub","require","ApiClient","instance","authentications","apiKey","finnhubClient","DefaultApi","companyProfile2","symbol","error","data","response","now","parseInt","Date","then","stockCandles","prices","len","length","formdays","i","date","setDate","getDate","toLocaleDateString","Math","round","high","low","high5","low5","max","min","final5","high30","low30","final30","closingprices","dates","GR5D","GR30D","labels","datasets","label","fill","backgroundColor","borderColor","pointRadius","formatYmd","toISOString","slice","nowFmt","thenFmt","companyNews","companyPeers","TextField","id","variant","value","onChange","e","target","onKeyDown","keyCode","fullWidth","Button","style","marginTop","onClick","display","className","map","info","href","color","peer","window","scrollTo","Google","quote","document","getElementById","innerHTML","companyBasicFinancials","today","getFullYear","getMonth","float","width","marginBottom","height","options","maintainAspectRatio","responsive","borderWidth","tweetId","Page404","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.137d2d78.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Line } from 'react-chartjs-2';\r\nimport React, { useState, useEffect } from 'react';\r\nimport './Home.css'\r\n\r\nfunction Home() {\r\n    const [hide, setHide] = useState(\"none\");\r\n    const [input, setInput] = useState();\r\n\r\n    const [sector, setSector] = useState();\r\n    const [name, setName] = useState();\r\n    const [country, setCountry] = useState();\r\n    const [exchange, setExchange] = useState();\r\n\r\n    const [price, setPrice] = useState();\r\n    const [five, setFive] = useState();\r\n    const [fifty, setFifty] = useState();\r\n    const [twohundred, setTwoHundred] = useState();\r\n    const [fiveGR, setFiveGR] = useState();\r\n    const [thirtyGR, setThirtyGR] = useState();\r\n\r\n    const [graph, setGraph] = useState();\r\n\r\n    const [news, setNews] = useState([]);\r\n\r\n    const [peers, setPeers] = useState([]);\r\n\r\n    function runFunc(stock) {\r\n        const finnhub = require('finnhub');\r\n        const api_key = finnhub.ApiClient.instance.authentications['api_key'];\r\n        api_key.apiKey = \"c3bsn6qad3iddisjsf5g\"\r\n        const finnhubClient = new finnhub.DefaultApi()\r\n\r\n        finnhubClient.companyProfile2({ symbol: stock }, (error, data, response) => {\r\n            setSector(data['finnhubIndustry'])\r\n            setName(data['name']);\r\n            setCountry(data['country']);\r\n            setExchange(data['exchange']);\r\n        })\r\n\r\n        const now = parseInt(Date.now() / 1000);\r\n        const then = now - 25920000;\r\n        finnhubClient.stockCandles(stock, \"D\", then, now, {}, (error, data, response) => {\r\n            var prices = data['c'];\r\n            var len = prices.length;\r\n\r\n            setPrice(prices[len - 1]);\r\n\r\n            var formdays = [];\r\n            for (var i = 0; i < len; i++) {\r\n                var date = new Date(data['t'][i] * 1000);\r\n                date.setDate(date.getDate() + 1);\r\n                formdays[i] = date.toLocaleDateString();\r\n            }\r\n\r\n            //5DMA\r\n            var five = 0;\r\n            for (var i = len - 1; i >= len - 5; i--) {\r\n                five += prices[i];\r\n            }\r\n            five /= 5;\r\n            five = Math.round(five * 100) / 100;\r\n            setFive(five);\r\n\r\n            //50DMA\r\n            var fifty = 0;\r\n            for (var i = len - 1; i >= len - 50; i--) {\r\n                fifty += prices[i];\r\n            }\r\n            fifty /= 50;\r\n            fifty = Math.round(fifty * 100) / 100\r\n            setFifty(fifty);\r\n\r\n            //200DMA\r\n            var twohundred = 0;\r\n            for (var i = len - 1; i >= len - 200; i--) {\r\n                twohundred += prices[i];\r\n            }\r\n            twohundred /= 200;\r\n            twohundred = Math.round(twohundred * 100) / 100\r\n            setTwoHundred(twohundred);\r\n\r\n            var high = data['h'];\r\n            var low = data['l'];\r\n\r\n            //5DGR\r\n            var high5 = 0;\r\n            var low5 = 10000000;\r\n            for (var i = len - 1; i >= len - 5; i--) {\r\n                high5 = Math.max(high5, high[i]);\r\n                low5 = Math.min(low5, low[i]);\r\n            }\r\n            var final5 = (high5 - low5) * 0.618 + low5;\r\n            final5 = Math.round(final5 * 100) / 100;\r\n            setFiveGR(final5);\r\n\r\n            //30DGR\r\n            var high30 = 0;\r\n            var low30 = 10000000;\r\n            for (var i = len - 1; i >= len - 30; i--) {\r\n                high30 = Math.max(high30, high[i]);\r\n                low30 = Math.min(low30, low[i]);\r\n            }\r\n            var final30 = (high30 - low30) * 0.618 + low30;\r\n            final30 = Math.round(final30 * 100) / 100;\r\n            setThirtyGR(final30);\r\n\r\n\r\n            //Graph\r\n            var closingprices = [];\r\n            for (var i = len - 1; i >= len - 30; i--) {\r\n                closingprices[29 - (len - i - 1)] = prices[i];\r\n            }\r\n            var dates = [];\r\n            for (var i = 0; i <= 29; i++) {\r\n                dates[i] = formdays[len - (29 - i) - 1];\r\n            }\r\n            var GR5D = [];\r\n            for (var i = 0; i <= 29; i++) {\r\n                GR5D[i] = final5;\r\n            }\r\n            var GR30D = [];\r\n            for (var i = 0; i <= 29; i++) {\r\n                GR30D[i] = final30;\r\n            }\r\n\r\n            const graphdata = {\r\n                labels: dates,\r\n                datasets: [\r\n                    {\r\n                        label: 'Price',\r\n                        data: closingprices,\r\n                        fill: false,\r\n                        backgroundColor: '#ff0000',\r\n                        borderColor: '#ffc7c7',\r\n                    },\r\n                    {\r\n                        label: \"5DGR\",\r\n                        data: GR5D,\r\n                        fill: false,\r\n                        pointRadius: \"0\",\r\n                        backgroundColor: 'white',\r\n                        borderColor: '#66c3e3',\r\n                    },\r\n                    {\r\n                        label: \"30DGR\",\r\n                        data: GR30D,\r\n                        fill: false,\r\n                        pointRadius: \"0\",\r\n                        backgroundColor: 'white',\r\n                        borderColor: '#999eb0',\r\n                    },\r\n                ],\r\n            };\r\n            setGraph(graphdata);\r\n\r\n            const formatYmd = date => date.toISOString().slice(0, 10);\r\n            var nowFmt = formatYmd(new Date());\r\n            var thenFmt = new Date();\r\n            thenFmt.setDate(thenFmt.getDate() - 1);\r\n            thenFmt = formatYmd(thenFmt);\r\n            finnhubClient.companyNews(stock, thenFmt, nowFmt, (error, data, response) => {\r\n                setNews([]);\r\n                for (var i = 0; i < Math.min(data.length, 3); i++) {\r\n                    setNews((news) => [...news, [\r\n                        data[i]['headline'],\r\n                        data[i]['source'],\r\n                        data[i]['url']\r\n                    ]]);\r\n                }\r\n            })\r\n\r\n            finnhubClient.companyPeers(stock, (error, data, response) => {\r\n                setPeers(data.slice(1, 6))\r\n            })\r\n\r\n            setHide(\"block\");\r\n        });\r\n    }\r\n\r\n    function runPeer(stock) {\r\n        setInput(stock);\r\n        runFunc(stock);\r\n        window.scrollTo(0, 0);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <h1>Company Report</h1>\r\n                <TextField id=\"input\" label=\"Enter Ticker\" variant=\"outlined\" value={input} onChange={(e) => setInput(e.target.value)}\r\n                    onKeyDown={(e) => { if (e.keyCode == 13) { runFunc(input) } }} fullWidth />\r\n                <Button variant=\"contained\" style={{ marginTop: \"1%\" }} onClick={() => runFunc(input)}>search</Button>\r\n                <div style={{ display: hide }}>\r\n                    <div id=\"head\">\r\n                        <p id=\"sector\">{sector}</p>\r\n                        <h2 id=\"name\">{name}</h2>\r\n                    </div>\r\n                    <div className=\"container\">\r\n                        <h3>Company Profile</h3>\r\n                        <p>Country: {country}</p>\r\n                        <p>Exchange: {exchange}</p>\r\n                    </div>\r\n                    <div className=\"container\">\r\n                        <h3>Stock Details</h3>\r\n                        <p> Current Price: {price}</p>\r\n                        <br></br>\r\n                        <p>5 Day Moving Average: {five}</p>\r\n                        <p>50 Day Moving Average: {fifty}</p>\r\n                        <p>200 Day Moving Average: {twohundred}</p>\r\n                        <br></br>\r\n                        <p>5 Day Golden Ratio: {fiveGR}</p>\r\n                        <p>30 Day Golden Ratio: {thirtyGR}</p>\r\n                        <br></br>\r\n                    </div>\r\n                    <div className=\"container\">\r\n                        <h3>Stock Prices Chart</h3>\r\n                        <Line data={graph} />\r\n                        <br></br>\r\n                    </div>\r\n                    <div className=\"container\">\r\n                        <h3>Recent Stories</h3>\r\n                        {news.length > 0 ? news.map((info) => (\r\n                            <a href={info[2]} className='link' target='_blank'>\r\n                                <div className='news'>\r\n                                    <h4>{info[0]}</h4>\r\n                                    <h6 style={{ color: '#77c8e5' }}>{info[1]}</h6>\r\n                                </div>\r\n                            </a>\r\n                        )) : <p>No recent stories</p>}\r\n                    </div>\r\n                    <div className=\"container\">\r\n                        <h3>See Also</h3>\r\n                        <div className='row'>\r\n                            {peers.map((peer) => (\r\n                                <div className='column'>\r\n                                    <div className='peerBox' onClick={() => runPeer(peer)}>\r\n                                        <h4>{peer}</h4>\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import { Line, Doughnut, Radar } from 'react-chartjs-2';\r\nimport { TwitterTweetEmbed } from 'react-twitter-embed';\r\nimport './Google.css';\r\n\r\nfunction Google() {\r\n    const data1 = {\r\n        labels: ['2016', '2017', '2018', '2019', '2020'],\r\n        datasets: [\r\n            {\r\n                label: 'Revenues',\r\n                data: [90272, 110855, 136819, 161857, 182527],\r\n                fill: false,\r\n                backgroundColor: '#ff0000',\r\n                borderColor: '#ffc7c7',\r\n            },\r\n            {\r\n                label: 'Costs & Expenses',\r\n                data: [66556, 84709, 109295, 127626, 141303],\r\n                fill: false,\r\n                backgroundColor: '#3487a4',\r\n                borderColor: '#dcecf2',\r\n            },\r\n        ],\r\n    };\r\n    const data2 = {\r\n        labels: ['2016', '2017', '2018', '2019', '2020'],\r\n        datasets: [\r\n            {\r\n                label: 'Assets',\r\n                data: [167497, 197295, 232792, 275909, 319616],\r\n                fill: false,\r\n                backgroundColor: '#ff0000',\r\n                borderColor: '#ffc7c7',\r\n            },\r\n            {\r\n                label: 'Liabilities',\r\n                data: [28461, 44793, 55164, 74467, 97072],\r\n                fill: false,\r\n                backgroundColor: '#3487a4',\r\n                borderColor: '#dcecf2',\r\n            },\r\n            {\r\n                label: \"Stockholders' Equity\",\r\n                data: [139036, 152502, 177628, 201442, 222544],\r\n                fill: false,\r\n                backgroundColor: '#55596a',\r\n                borderColor: '#ededed',\r\n            },\r\n        ],\r\n    };\r\n    const data3 = {\r\n        labels: ['Google Search & other', 'YouTube ads', 'Google Network Members’ properties', 'Google other', 'Google Cloud', 'Other Bets', 'Hedging gains'],\r\n        datasets: [\r\n          {\r\n            label: 'Revenues',\r\n            data: [104062, 19772, 23090, 21711, 13059, 657, 176],\r\n            backgroundColor: [\r\n              '#ffc7c7',\r\n              '#dcecf2',\r\n              '#ededed',\r\n              '#cfffdc',\r\n              '#f7e8ff',\r\n              '#fff9d6',\r\n              '#ffdbfb',\r\n            ],\r\n            borderColor: [\r\n              '#ff0000',\r\n              '#3487a4',\r\n              '#55596a',\r\n              '#27d957',\r\n              '#ac49e6',\r\n              '#ffd900',\r\n              '#f200d6',\r\n            ],\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      };\r\n      const data4 = {\r\n        labels: ['Environment Risk', 'Social Risk', 'Governance Risk'],\r\n        datasets: [\r\n          {\r\n            label: 'Score',\r\n            data: [0.5, 9.9, 11.9],\r\n            backgroundColor: 'rgba(255, 99, 132, 0.2)',\r\n            borderColor: '#ff0000',\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      };\r\n      \r\n    const finnhub = require('finnhub');\r\n    const api_key = finnhub.ApiClient.instance.authentications['api_key'];\r\n    api_key.apiKey = \"c3bsn6qad3iddisjsf5g\" // Replace this\r\n    const finnhubClient = new finnhub.DefaultApi()\r\n    finnhubClient.quote(\"GOOGL\", (error, data, response) => {\r\n        document.getElementById('o').innerHTML += data['o'];\r\n        document.getElementById('c').innerHTML += data['c'];\r\n        document.getElementById('pc').innerHTML += data['pc'];\r\n        document.getElementById('h').innerHTML += data['h'];\r\n        document.getElementById('l').innerHTML += data['l'];\r\n    });\r\n    finnhubClient.companyBasicFinancials(\"GOOGL\", \"margin\", (error, data, response) => {\r\n        document.getElementById('f').innerHTML += data['metric']['freeOperatingCashFlow/revenue5Y']\r\n        document.getElementById('g').innerHTML += data['metric']['grossMargin5Y']\r\n        document.getElementById('n').innerHTML += data['metric']['netProfitMargin5Y']\r\n        document.getElementById('op').innerHTML += data['metric']['operatingMargin5Y']\r\n        document.getElementById('p').innerHTML += data['metric']['pretaxMargin5Y']\r\n    });\r\n\r\n    var today = new Date();\r\n    var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n    \r\n    return (\r\n        <div>\r\n            <div style={{float: \"left\", width: \"80%\"}}>\r\n                <p style={{ marginBottom: \"0px\", color: \"red\" }}>Company</p>\r\n                <h1 style={{ marginTop: \"0px\" }}>Google</h1>\r\n                <p>Google's core business areas contain Google Services (Android, Chrome, Gmail, Google Drive, Google Maps, Google Photos, Google Play, Search, and YouTube), Google Cloud (Google Cloud Platform and Google Workspace) and Other Bets.</p>\r\n            </div>\r\n            <a href=\"./\" style={{float: \"right\", color: \"black\"}}>Home</a>\r\n            <div style={{float: \"left\", width: \"100%\"}}>\r\n                <h3 className=\"titlestyle\">Revenues | Costs & Expenses</h3>\r\n                <Line data={data1} width={1100} height={400} options={{ maintainAspectRatio: false, responsive: false }} />\r\n                <h3 className=\"titlestyle\">Assets | Liabilities | Stockholders' Equity</h3>\r\n                <Line data={data2} width={1100} height={400} options={{ maintainAspectRatio: false, responsive: false }} />\r\n                <h3 className=\"titlestyle\">Revenues by Type</h3>\r\n                <Doughnut data={data3} width={1100} height={400} options={{ maintainAspectRatio: false, responsive: false }} />\r\n                <h3 className=\"titlestyle\">ESG</h3>\r\n                <Radar data={data4} width={1100} height={400} options={{ maintainAspectRatio: false, responsive: false }} />\r\n                <h3 className=\"titlestyle\">Tweets</h3>\r\n                <div style={{float: \"left\", width: \"100%\"}}>\r\n                    <div style={{float: \"left\", width: \"49%\"}}><TwitterTweetEmbed tweetId={'1408000852581748736'}/></div>\r\n                    <div style={{float: \"right\", width: \"49%\"}}><TwitterTweetEmbed tweetId={'1406337513740849155'}/></div>\r\n                </div>\r\n                <div style={{marginTop: \"3%\", float: \"left\"}}>\r\n                    <h3>Stock Quote: {date}</h3>\r\n                    <div>\r\n                        <p id=\"o\">Open: </p>\r\n                        <p id=\"c\">Close: </p>\r\n                        <p id=\"pc\">Previous Close: </p>\r\n                        <p id=\"h\">High: </p>\r\n                        <p id=\"l\">Low: </p>\r\n                    </div>\r\n                </div>\r\n                <div style={{marginTop: \"3%\", float: \"right\", width: \"60%\"}}>\r\n                    <h3>Basic Financials (5Y):</h3>\r\n                    <div>\r\n                        <p id=\"f\">Free Operating Cash Flow / Revenue: </p>\r\n                        <p id=\"g\">Gross Margin: </p>\r\n                        <p id=\"n\">Net Profit Margin: </p>\r\n                        <p id=\"op\">Operating Margin: </p>\r\n                        <p id=\"p\">Pre-tax Margin: </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Google;","\r\nfunction Page404(){\r\n    return(\r\n        <div>\r\n            <h1 style={{float: \"left\"}}>Page Coming Soon!</h1>\r\n            <a href=\"./\" style={{float: \"right\", color: \"black\"}}>Home</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Page404;","import logo from './logo.svg';\r\nimport './App.css';\r\nimport{BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\r\nimport Home from './Home/Home.js'\r\nimport Google from './Google/Google.js'\r\nimport Page404 from './404/404.js'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n      <Switch>\r\n      <Route exact path=\"/\">\r\n          <Home />\r\n        </Route>\r\n      <Route path=\"/google\">\r\n          <Google />\r\n        </Route>\r\n      <Route path=\"/\">\r\n          <Page404 />\r\n        </Route>\r\n      </Switch>\r\n      </Router>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}